newCWdata$created_at = as.POSIXlt(newCWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
CWdataFull = rbind(CWdataFull,newCWdata)
# write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
newStartDate = as.POSIXlt(newCWdata$created_at[1])
newEndDate =  as.POSIXlt(newCWdata$created_at[nrow(newCWdata)])
newDateSeries = seq(from=newStartDate,to=newEndDate+3600,by='1 day')
attr(newDateSeries,"tzone") = 'GMT'
}else{
newDateSeries = NULL
print("here")
}
}else{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
# the start date is approximately when the app was officially launched, there are some pics from earlier dates that were added manually by us
dateSeries = seq(from=as.POSIXct("2017-01-01 01:00:00 GMT"),to=CWdataFull$created_at[nrow(CWdataFull)]+3600,by='1 day')
attr(dateSeries,"tzone") = 'GMT'
saveRDS(dateSeries,file=fp_oldDateSeries)
}
CWdata = CWdataFull # select all CW data
CWdata$created_at = as.POSIXlt(CWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
cumSumsFile = paste0("CWData/cumSums")
exists("newDateSeries")){
dateSeries = readRDS(fp_o
exists("newDateSeries")
exists("newDateSeries")
dateSeries = readRDS(fp_oldDateSeries)
dateSeries_newold = c(dateSeries,newDateSeries)
saveRDS(dateSeries_newold,fp_oldDateSeries)
# all cumSums
newCumSumAll =  sapply(newDateSeries,function(x) length(CWdata$Spot_ID[CWdata$created_at<=x]))
oldCumSumAll = readRDS(cumSumsFile)
cumSums = c(oldCumSumAll,newCumSumAll)
# all cumSums
newCumSumAll =  sapply(newDateSeries,function(x) length(CWdata$Spot_ID[CWdata$created_at<=x]))
oldCumSumAll = readRDS(cumSumsFile)
# all cumSums
cumSums =  sapply(dateSeries,function(x) length(CWdata$Spot_ID[CWdata$created_at<=x]))
saveRDS(cumSums,file = cumSumsFile)
cumSums
oldCumSumAll = readRDS(cumSumsFile)
oldCumSumAll
cumSums = c(oldCumSumAll,newCumSumAll)
cumSums
# all cumSums
cumSums =  sapply(dateSeries,function(x) length(CWdata$Spot_ID[CWdata$created_at<=x]))
saveRDS(cumSums,file = cumSumsFile)
oldCumSumAll = readRDS(cumSumsFile)
oldCumSumAll
c(oldCumSumAll,unlist(newCumSumAll))
cumSums = c(oldCumSumAll,unlist(newCumSumAll))
cumSums
saveRDS(cumSums,file = cumSumsFile)
runApp()
runApp()
runApp()
IdsPerRootTS = sapply(uq.roots,function(x) CWdataTS$Spot_ID[CWdataTS$root_id==x])
# for temporary streams
CWdataTS = CWdata[CWdata$category==468,]
shiny::runApp()
runApp()
# this is for the button in the about page.
# refreshes the entire dataset, deletes the existing file and overwrites the entire thing
locFile4Attempt = 'CW_Data.csv'
observeEvent(input$reloadAllCWdata,{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
js$refresh()
})
# path to store the used the dateseries from with the new dates appended
fp_oldDateSeries = "CWData/oldDateSeries"
if(file.exists(paste0("CWdata/",locFile4Attempt))){
CWdataFull = read.csv(paste0("CWdata/",locFile4Attempt),stringsAsFactors = F)
latestUpdate = CWdataFull$created_at[nrow(CWdataFull)]
newCWdata = Download_LatestCWdata_from_API(lastDate = latestUpdate)
if(!is.null(newCWdata)){
colnames(newCWdata)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
newCWdata$created_at = as.POSIXlt(newCWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
CWdataFull = rbind(CWdataFull,newCWdata)
# write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
newStartDate = as.POSIXlt(newCWdata$created_at[1])
newEndDate =  as.POSIXlt(newCWdata$created_at[nrow(newCWdata)])
newDateSeries = seq(from=newStartDate,to=newEndDate+3600,by='1 day')
attr(newDateSeries,"tzone") = 'GMT'
}else{
newDateSeries = NULL
print("here")
}
}else{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
# the start date is approximately when the app was officially launched, there are some pics from earlier dates that were added manually by us
dateSeries = seq(from=as.POSIXct("2017-01-01 01:00:00 GMT"),to=CWdataFull$created_at[nrow(CWdataFull)]+3600,by='1 day')
attr(dateSeries,"tzone") = 'GMT'
saveRDS(dateSeries,file=fp_oldDateSeries)
}
CWdata = CWdataFull # select all CW data
CWdata$created_at = as.POSIXlt(CWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
cumSumsFile = paste0("CWData/cumSums")
if (exists("newDateSeries")){
dateSeries = readRDS(fp_oldDateSeries)
dateSeries_newold = c(dateSeries,newDateSeries)
saveRDS(dateSeries_newold,fp_oldDateSeries)
# all cumSums
newCumSumAll =  sapply(newDateSeries,function(x) length(CWdata$Spot_ID[CWdata$created_at<=x]))
oldCumSumAll = readRDS(cumSumsFile)
cumSums = c(oldCumSumAll,unlist(newCumSumAll))
saveRDS(cumSums,file = cumSumsFile)
# cumSumUsers
newCumSumUsers = sapply(newDateSeries,function(x) length(unique(CWdata$spotted_by[CWdata$created_at<=x])))
oldCumSumUsers = readRDS("CWdata/cumSumUsers")
cumSumUsers = c(oldCumSumUsers,unlist(newCumSumUsers))
saveRDS(cumSumUsers,"CWdata/cumSumUsers")
# continue putting all variables that could be save and restored for faster loading into this ifelse
}else{
# all cumSums
cumSums =  sapply(dateSeries,function(x) length(CWdata$Spot_ID[CWdata$created_at<=x]))
saveRDS(cumSums,file = cumSumsFile)
# cumsums at dates and Root IDs with corresponding updates
cumSumUsers = sapply(dateSeries,function(x) length(unique(CWdata$spotted_by[CWdata$created_at<=x])))
saveRDS(cumSumUsers,"CWdata/cumSumUsers")
}
# Base data manipulations for dashboard ----
uq.dates = unique(CWdata$created_at)
uq.roots = unique(CWdata$root_id)
uq.users = unique(CWdata$spotted_by)
# Monthly active users over the entire period----
monthsAll = paste0(format(CWdata$created_at,'%Y'),'_',format(CWdata$created_at,'%m'))
# create unique months from dateSeries, because there might be months wihtout contributions
uq.months = unique(paste0(format(dateSeries,'%Y'),'_',format(dateSeries,'%m')))
monthlyActiveUsersAll = sapply(uq.months,function(x){
length(unique(CWdata$created_by[monthsAll==x]))
})
IdsPerRoot = sapply(uq.roots,function(x) CWdata$Spot_ID[CWdata$root_id==x])
IdsPerUser = sapply(uq.users,function(x) CWdata$Spot_ID[CWdata$spotted_by==x])
# for the slider further below
maxcontribs = max(sapply(IdsPerRoot, function(x) length(x)))
maxcontribUser = max(sapply(IdsPerUser, function(x) length(x)))
# for temporary streams
CWdataTS = CWdata[CWdata$category==468,]
IdsPerRootTS = sapply(uq.roots,function(x) CWdataTS$Spot_ID[CWdataTS$root_id==x])
IdsPerUserTS = sapply(uq.users,function(x) CWdataTS$Spot_ID[CWdataTS$spotted_by==x])
maxcontribsTS = max(sapply(IdsPerRootTS, function(x) length(x)))
maxcontribUserTS = max(sapply(IdsPerUserTS, function(x) length(x)))
uq.datesTS = unique(CWdataTS$created_at)
dateSeriesTS = seq(from=min(as.POSIXct("2017-01-01 01:00:00 GMT")),to=max(uq.datesTS)+3600,by='1 day')
cumSumsTS = sapply(dateSeriesTS,function(x) length(CWdataTS$Spot_ID[CWdataTS$created_at<=x]))
cumSumsUsersTS = sapply(dateSeriesTS,function(x) length(unique(CWdataTS$spotted_by[CWdataTS$created_at<=x])))
# Monthly active users
monthsTS = paste0(format(CWdataTS$created_at,'%Y'),'_',format(CWdataTS$created_at,'%m'))
# create unique months from dateSeries, because there might be months wihtout contributions
monthlyActiveUsersTS = sapply(uq.months,function(x){
length(unique(CWdataTS$created_by[monthsTS==x]))
})
# for soil moisture
CWdataSM = CWdata[CWdata$category==469,]
IdsPerRootSM = sapply(uq.roots,function(x) CWdataSM$Spot_ID[CWdataSM$root_id==x])
IdsPerUserSM = sapply(uq.users,function(x) CWdataSM$Spot_ID[CWdataSM$spotted_by==x])
maxcontribsSM = max(sapply(IdsPerRootSM, function(x) length(x)))
maxcontribUserSM = max(sapply(IdsPerUserSM, function(x) length(x)))
uq.datesSM = unique(CWdataSM$created_at)
dateSeriesSM = seq(from=min(as.POSIXct("2017-01-01 01:00:00 GMT")),to=max(uq.datesSM)+3600,by='1 day')
cumSumsSM = sapply(dateSeriesSM,function(x) length(CWdataSM$Spot_ID[CWdataSM$created_at<=x]))
cumSumsUsersSM = sapply(dateSeriesSM,function(x) length(unique(CWdataSM$spotted_by[CWdataSM$created_at<=x])))
# Monthly active users
monthsSM = paste0(format(CWdataSM$created_at,'%Y'),'_',format(CWdataSM$created_at,'%m'))
# create unique months from dateSeries, because there might be months wihtout contributions
monthlyActiveUsersSM = sapply(uq.months,function(x){
length(unique(CWdataSM$created_by[monthsSM==x]))
})
# for plastic pollution streams
CWdataPP = CWdata[CWdata$category==1919,]
IdsPerRootPP = sapply(uq.roots,function(x) CWdataPP$Spot_ID[CWdataPP$root_id==x])
IdsPerUserPP = sapply(uq.users,function(x) CWdataPP$Spot_ID[CWdataPP$spotted_by==x])
maxcontribsPP = max(sapply(IdsPerRootPP, function(x) length(x)))
maxcontribUserPP = max(sapply(IdsPerUserPP, function(x) length(x)))
uq.datesPP = unique(CWdataPP$created_at)
dateSeriesPP = seq(from=min(as.POSIXct("2017-01-01 01:00:00 GMT")),to=max(uq.datesPP)+3600,by='1 day')
cumSumsPP = sapply(dateSeriesPP,function(x) length(CWdataPP$Spot_ID[CWdataPP$created_at<=x]))
cumSumsUsersPP = sapply(dateSeriesPP,function(x) length(unique(CWdataPP$spotted_by[CWdataPP$created_at<=x])))
# Monthly active users
monthsPP = paste0(format(CWdataPP$created_at,'%Y'),'_',format(CWdataPP$created_at,'%m'))
# create unique months from dateSeries, because there might be months wihtout contributions
monthlyActiveUsersPP = sapply(uq.months,function(x){
length(unique(CWdataPP$created_by[monthsPP==x]))
})
# for water levels
CWdataWL = CWdata[CWdata$category==470,]
IdsPerRootWL = sapply(uq.roots,function(x) CWdataWL$Spot_ID[CWdataWL$root_id==x])
IdsPerUserWL = sapply(uq.users,function(x) CWdataWL$Spot_ID[CWdataWL$spotted_by==x])
maxcontribsWL = max(sapply(IdsPerRootWL, function(x) length(x)))
maxcontribUserWL = max(sapply(IdsPerUserWL, function(x) length(x)))
uq.datesWL = unique(CWdataWL$created_at)
dateSeriesWL = seq(from=min(as.POSIXct("2017-01-01 01:00:00 GMT")),to=max(uq.datesWL)+3600,by='1 day')
cumSumsWL = sapply(dateSeriesWL,function(x) length(CWdataWL$Spot_ID[CWdataWL$created_at<=x]))
cumSumsUsersWL = sapply(dateSeriesWL,function(x) length(unique(CWdataWL$spotted_by[CWdataWL$created_at<=x])))
# Monthly active users
monthsWL = paste0(format(CWdataWL$created_at,'%Y'),'_',format(CWdataWL$created_at,'%m'))
# create unique months from dateSeries, because there might be months wihtout contributions
monthlyActiveUsersWL = sapply(uq.months,function(x){
length(unique(CWdataWL$created_by[monthsWL==x]))
})
# Plots with contributions ----
cumPlot = cumplot(dateSeries, cumSums,'Cumulative Contributions')
output$cumsumplot = renderPlot({cumPlot})
cumPlotWL = cumplot(dateSeriesWL, cumSumsWL,'Cumulative Contributions')
output$cumsumplotWL = renderPlot({cumPlotWL})
cumPlotSM = cumplot(dateSeriesSM, cumSumsSM,'Cumulative Contributions')
dateSeries
cumSums
# Plots with contributions ----
cumPlot = cumplot(dateSeries, cumSums,'Cumulative Contributions')
dateSeries
# Plots with contributions ----
cumPlot = cumplot(dateSeries_newold, cumSums,'Cumulative Contributions')
cumPlot
runApp()
locFile4Attempt
exists("newDateSeries")
dateSeries = readRDS(fp_oldDateSeries)
dateSeries
dateSeries
newDateSeries
dateSeries_newold = c(dateSeries,newDateSeries)
saveRDS(dateSeries_newold,fp_oldDateSeries)
newCumSumAll
monthlyActiveUsersAll
fp_oldDateSeries
# if there were no new contributions to be downloaded, then make the newDateSeries a NULL variable
newDateSeries = NULL
newDateSeries
exists("newDateSeries")
# if there were no new contributions to be downloaded, then make the newDateSeries a NULL-variable
newDateSeries = False
# if there were no new contributions to be downloaded, then make the newDateSeries a NULL-variable
newDateSeries = FALSE
exists("newDateSeries")
# this is for the button in the about page.
# refreshes the entire dataset, deletes the existing file and overwrites the entire thing
locFile4Attempt = 'CW_Data.csv'
observeEvent(input$reloadAllCWdata,{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
js$refresh()
})
# path to store the used the dateseries with the new dates appended
fp_oldDateSeries = "CWData/oldDateSeries"
# if previous CrowdWater data exists then append the new contributions
# else download all contributions again and store them as CW_Data.csv
if(file.exists(paste0("CWdata/",locFile4Attempt))){
CWdataFull = read.csv(paste0("CWdata/",locFile4Attempt),stringsAsFactors = F)
latestUpdate = CWdataFull$created_at[nrow(CWdataFull)]
newCWdata = Download_LatestCWdata_from_API(lastDate = latestUpdate)
if(!is.null(newCWdata)){
colnames(newCWdata)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
newCWdata$created_at = as.POSIXlt(newCWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
CWdataFull = rbind(CWdataFull,newCWdata)
# write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
newStartDate = as.POSIXlt(newCWdata$created_at[1])
newEndDate =  as.POSIXlt(newCWdata$created_at[nrow(newCWdata)])
newDateSeries = seq(from=newStartDate,to=newEndDate+3600,by='1 day')
attr(newDateSeries,"tzone") = 'GMT'
}else{
# if there were no new contributions to be downloaded, then make the newDateSeries a NULL-variable
newDateSeries = NULL
print("here")
}
}else{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
# the start date is approximately when the app was officially launched, there are some pics from earlier dates that were added manually by us
dateSeries = seq(from=as.POSIXct("2017-01-01 01:00:00 GMT"),to=CWdataFull$created_at[nrow(CWdataFull)]+3600,by='1 day')
attr(dateSeries,"tzone") = 'GMT'
saveRDS(dateSeries,file=fp_oldDateSeries)
}
library(shiny)
library(shinydashboard)
library(ggplot2)
library(dplyr)
library(shinycssloaders)
library(shinyjs)
library(rdrop2)
library(V8)
library(leaflet)
library(leaflet.extras)
library(htmltools)
# setwd('Z:/group/h2k-data/Projects/CrowdWater/Oeffentlichkeitsarbeit/Homepage/DataDashboard/CrowdWaterDashboard')
source('./CW_API_Download.R')
# this is for the button in the about page.
# refreshes the entire dataset, deletes the existing file and overwrites the entire thing
locFile4Attempt = 'CW_Data.csv'
observeEvent(input$reloadAllCWdata,{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
js$refresh()
})
# path to store the used the dateseries with the new dates appended
fp_oldDateSeries = "CWData/oldDateSeries"
# if previous CrowdWater data exists then append the new contributions
# else download all contributions again and store them as CW_Data.csv
if(file.exists(paste0("CWdata/",locFile4Attempt))){
CWdataFull = read.csv(paste0("CWdata/",locFile4Attempt),stringsAsFactors = F)
latestUpdate = CWdataFull$created_at[nrow(CWdataFull)]
newCWdata = Download_LatestCWdata_from_API(lastDate = latestUpdate)
if(!is.null(newCWdata)){
colnames(newCWdata)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
newCWdata$created_at = as.POSIXlt(newCWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
CWdataFull = rbind(CWdataFull,newCWdata)
# write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
newStartDate = as.POSIXlt(newCWdata$created_at[1])
newEndDate =  as.POSIXlt(newCWdata$created_at[nrow(newCWdata)])
newDateSeries = seq(from=newStartDate,to=newEndDate+3600,by='1 day')
attr(newDateSeries,"tzone") = 'GMT'
}else{
# if there were no new contributions to be downloaded, then make the newDateSeries a NULL-variable
newDateSeries = NULL
print("here")
}
}else{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
# the start date is approximately when the app was officially launched, there are some pics from earlier dates that were added manually by us
dateSeries = seq(from=as.POSIXct("2017-01-01 01:00:00 GMT"),to=CWdataFull$created_at[nrow(CWdataFull)]+3600,by='1 day')
attr(dateSeries,"tzone") = 'GMT'
saveRDS(dateSeries,file=fp_oldDateSeries)
}
CWdata = CWdataFull # select all CW data
CWdata$created_at = as.POSIXlt(CWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
cumSumsFile = paste0("CWData/cumSums")
cumSumsFile
exists("newDateSeries")
dateSeries = readRDS(fp_oldDateSeries)
# this is for the button in the about page.
# refreshes the entire dataset, deletes the existing file and overwrites the entire thing
locFile4Attempt = 'CW_Data.csv'
observeEvent(input$reloadAllCWdata,{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
js$refresh()
})
# path to store the used the dateseries with the new dates appended
fp_oldDateSeries = "CWData/oldDateSeries"
# if previous CrowdWater data exists then append the new contributions
# else download all contributions again and store them as CW_Data.csv
if(file.exists(paste0("CWdata/",locFile4Attempt))){
CWdataFull = read.csv(paste0("CWdata/",locFile4Attempt),stringsAsFactors = F)
latestUpdate = CWdataFull$created_at[nrow(CWdataFull)]
newCWdata = Download_LatestCWdata_from_API(lastDate = latestUpdate)
if(!is.null(newCWdata)){
colnames(newCWdata)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
newCWdata$created_at = as.POSIXlt(newCWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
CWdataFull = rbind(CWdataFull,newCWdata)
# write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
newStartDate = as.POSIXlt(newCWdata$created_at[1])
newEndDate =  as.POSIXlt(newCWdata$created_at[nrow(newCWdata)])
newDateSeries = seq(from=newStartDate,to=newEndDate+3600,by='1 day')
attr(newDateSeries,"tzone") = 'GMT'
}else{
# if there were no new contributions to be downloaded, then make the newDateSeries a NULL-variable
newDateSeries = NULL
print("here")
}
}else{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
# the start date is approximately when the app was officially launched, there are some pics from earlier dates that were added manually by us
dateSeries = seq(from=as.POSIXct("2017-01-01 01:00:00 GMT"),to=CWdataFull$created_at[nrow(CWdataFull)]+3600,by='1 day')
attr(dateSeries,"tzone") = 'GMT'
saveRDS(dateSeries,file=fp_oldDateSeries)
}
# if previous CrowdWater data exists then append the new contributions
# else download all contributions again and store them as CW_Data.csv
if(file.exists(paste0("CWdata/",locFile4Attempt))){
CWdataFull = read.csv(paste0("CWdata/",locFile4Attempt),stringsAsFactors = F)
latestUpdate = CWdataFull$created_at[nrow(CWdataFull)]
newCWdata = Download_LatestCWdata_from_API(lastDate = latestUpdate)
if(!is.null(newCWdata)){
colnames(newCWdata)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
newCWdata$created_at = as.POSIXlt(newCWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
CWdataFull = rbind(CWdataFull,newCWdata)
# write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
newStartDate = as.POSIXlt(newCWdata$created_at[1])
newEndDate =  as.POSIXlt(newCWdata$created_at[nrow(newCWdata)])
newDateSeries = seq(from=newStartDate,to=newEndDate+3600,by='1 day')
attr(newDateSeries,"tzone") = 'GMT'
}else{
# if there were no new contributions to be downloaded, then make the newDateSeries a NULL-variable
newDateSeries = NULL
print("here")
}
}else{
CWdataFull = Download_AllCWdata_from_API()
colnames(CWdataFull)[1]='Spot_ID'
CWdataFull$created_at = as.POSIXlt(CWdataFull$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
write.csv(CWdataFull,file=paste0("CWdata/",locFile4Attempt),row.names = F)
# the start date is approximately when the app was officially launched, there are some pics from earlier dates that were added manually by us
dateSeries = seq(from=as.POSIXct("2017-01-01 01:00:00 GMT"),to=CWdataFull$created_at[nrow(CWdataFull)]+3600,by='1 day')
attr(dateSeries,"tzone") = 'GMT'
saveRDS(dateSeries,file=fp_oldDateSeries)
}
CWdata = CWdataFull # select all CW data
CWdata$created_at = as.POSIXlt(CWdata$created_at,format = '%Y-%m-%d %H:%M:%S',tz='GMT',usetz=T)
cumSumsFile = paste0("CWData/cumSums")
exists("newDateSeries")
rm("newDateSeries")
exists("newDateSeries")
# if there were new downloads
if (exists("newDateSeries")){
dateSeries = readRDS(fp_oldDateSeries)
dateSeries_newold = c(dateSeries,newDateSeries)
saveRDS(dateSeries_newold,fp_oldDateSeries)
# all cumSums
newCumSumAll =  sapply(newDateSeries,function(x) length(CWdata$Spot_ID[CWdata$created_at<=x]))
oldCumSumAll = readRDS(cumSumsFile)
cumSums = c(oldCumSumAll,unlist(newCumSumAll))
saveRDS(cumSums,file = cumSumsFile)
# cumSumUsers
newCumSumUsers = sapply(newDateSeries,function(x) length(unique(CWdata$spotted_by[CWdata$created_at<=x])))
oldCumSumUsers = readRDS("CWdata/cumSumUsers")
cumSumUsers = c(oldCumSumUsers,unlist(newCumSumUsers))
saveRDS(cumSumUsers,"CWdata/cumSumUsers")
# continue putting all variables that could be saved and restored for faster loading into this ifelse
dateSeries = dateSeries_newold
}else{
# all cumSums
cumSums =  sapply(dateSeries,function(x) length(CWdata$Spot_ID[CWdata$created_at<=x]))
saveRDS(cumSums,file = cumSumsFile)
# cumsums at dates and Root IDs with corresponding updates
cumSumUsers = sapply(dateSeries,function(x) length(unique(CWdata$spotted_by[CWdata$created_at<=x])))
saveRDS(cumSumUsers,"CWdata/cumSumUsers")
}
# for temporary streams
CWdataTS = CWdata[CWdata$category==468,]
IdsPerRootTS = sapply(uq.roots,function(x) CWdataTS$Spot_ID[CWdataTS$root_id==x])
# Base data manipulations for dashboard ----
uq.dates = unique(CWdata$created_at)
uq.roots = unique(CWdata$root_id)
uq.users = unique(CWdata$spotted_by)
# for soil moisture
CWdataSM = CWdata[CWdata$category==469,]
IdsPerRootSM = sapply(uq.roots,function(x) CWdataSM$Spot_ID[CWdataSM$root_id==x])
IdsPerUserSM = sapply(uq.users,function(x) CWdataSM$Spot_ID[CWdataSM$spotted_by==x])
maxcontribsSM = max(sapply(IdsPerRootSM, function(x) length(x)))
maxcontribUserSM = max(sapply(IdsPerUserSM, function(x) length(x)))
uq.datesSM = unique(CWdataSM$created_at)
dateSeriesSM = seq(from=min(as.POSIXct("2017-01-01 01:00:00 GMT")),to=max(uq.datesSM)+3600,by='1 day')
cumSumsSM = sapply(dateSeriesSM,function(x) length(CWdataSM$Spot_ID[CWdataSM$created_at<=x]))
cumSumsUsersSM = sapply(dateSeriesSM,function(x) length(unique(CWdataSM$spotted_by[CWdataSM$created_at<=x])))
# Monthly active users
monthsSM = paste0(format(CWdataSM$created_at,'%Y'),'_',format(CWdataSM$created_at,'%m'))
# create unique months from dateSeries, because there might be months wihtout contributions
monthlyActiveUsersSM = sapply(uq.months,function(x){
length(unique(CWdataSM$created_by[monthsSM==x]))
})
runApp()
runApp()
maxcontribsTS
# for temporary streams
CWdataTS = CWdata[CWdata$category==468,]
IdsPerRootTS = sapply(uq.roots,function(x) CWdataTS$Spot_ID[CWdataTS$root_id==x])
IdsPerRootTS
IdsPerUserTS
maxcontribsTS = max(sapply(IdsPerRootTS, function(x) length(x)))
maxcontribsTS
maxcontribUserTS
maxcontribUserTS = max(sapply(IdsPerUserTS, function(x) length(x)))
maxcontribUserTS
# for temporary streams
CWdataTS = CWdata[CWdata$category==468,]
IdsPerRootTS = sapply(uq.roots,function(x) CWdataTS$Spot_ID[CWdataTS$root_id==x])
IdsPerUserTS = sapply(uq.users,function(x) CWdataTS$Spot_ID[CWdataTS$spotted_by==x])
maxcontribsTS = max(sapply(IdsPerRootTS, function(x) length(x)))
maxcontribUserTS = max(sapply(IdsPerUserTS, function(x) length(x)))
maxcontribUserTS
maxcontribsTS
runApp()
runApp()
runApp()
cumPlotWL = cumplot(dateSeriesWL, cumSumsWL,'Cumulative Contributions')
newCumSumUsers
newDateSeries
runApp()
runApp()
runApp()
nrContribs
runApp()
runApp()
runApp()
runApp()
fp_oldDateSeries
runApp()
runApp()
runApp()
